@page "/inspeccion/{idMaquina:int}"
@inject IDataInspeccion DataInspeccion
@inject IDataPregunta DataPregunta
@inject NotificationService NotificationService

<section id="encabezadoInpec">
    <aside id="EncabezadoIzquierda">
            <RadzenImage id="img" Path="img/paveca.png"/>
            <h1 id="titulo">INSPECCION DE MAQUINAS</h1>
    </aside>
    <aside id="EncabezadoDerecha">
        <RadzenTemplateForm TItem="Models.Inspeccion" Data=@nuevaInspeccion>
            <RadzenFieldset Text="Inpseccion">
                <RadzenStack Gap="2rem" Class="rz-p-1 rz-p-md-2">
                    <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                        <RadzenColumn Size="1" SizeMD="1">
                            <RadzenLabel Text="Turno" />
                        </RadzenColumn>
                        <RadzenColumn Size="5" SizeMD="5" Class="rz-text-align-center rz-text-align-md-center">
                                <RadzenRadioButtonList Data="@listaTurno" @bind-Value=@nuevaInspeccion.Iturno TValue="string" />
                        </RadzenColumn>
                        <RadzenColumn Size="1" SizeMD="1">
                            <RadzenLabel Text="Grupo" />
                        </RadzenColumn>
                        <RadzenColumn Size="5" SizeMD="5" Class="rz-text-align-center rz-text-align-md-center">
                            <RadzenRadioButtonList Data="@listaGrupo" @bind-Value=@nuevaInspeccion.Igrupo TValue="string"/>
                        </RadzenColumn>
                    </RadzenRow>
                    <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                        <RadzenColumn Size="4" SizeMD="4" Class="rz-text-align-start rz-text-align-md-start">
                            <RadzenFormField  Variant="Variant.Flat" style="width: 98%;" Size="5" SizeMD="5" Text="Equipo">
                                <RadzenTextBox @bind-Value=nuevaInspeccion.Iequipo Style="width: 100%;" />
                            </RadzenFormField>
                        </RadzenColumn>
                        <RadzenColumn Size="4" SizeMD="4" Class="rz-text-align-start rz-text-align-md-start">
                            <RadzenFormField  Variant="Variant.Flat" style="width: 98%;" Size="5" SizeMD="5" Text="Area">
                                <RadzenTextBox @bind-Value=nuevaInspeccion.Iarea Style="width: 100%;" />
                            </RadzenFormField>
                        </RadzenColumn>
                        <RadzenColumn Size="4" SizeMD="4" Class="rz-text-align-start rz-text-align-md-start">
                            <RadzenFormField  Variant="Variant.Flat" style="width: 98%;" Size="5" SizeMD="5" Text="Ficha">
                                <RadzenTextBox @bind-Value=nuevaInspeccion.Ificha Style="width: 100%;" />
                            </RadzenFormField>
                        </RadzenColumn>
                    </RadzenRow>
                </RadzenStack>
            </RadzenFieldset>
        </RadzenTemplateForm>
    </aside>
</section>



@if(listaDataInspeccion != null && listaDataInspeccion[0].IdMaqPreNavigation != null){
    @foreach(InspecDatum item in listaDataInspeccion){

            @if(tipoAnterior == ""){ 
                cambioTipo(item.IdMaqPreNavigation.IdPreguntaNavigation.IdTipPreNavigation.Tpnombre);
                <section class="contenTipoPregunta">
                    <h2 class="TipoPregunta">@tipoAnterior</h2>
                    <h2 class="Observacion">Observacion</h2>
                </section>
            }else if(tipoAnterior != item.IdMaqPreNavigation.IdPreguntaNavigation.IdTipPreNavigation.Tpnombre){
                cambioTipo(item.IdMaqPreNavigation.IdPreguntaNavigation.IdTipPreNavigation.Tpnombre);
                <section class="contenTipoPregunta">
                    <h2 class="TipoPregunta">@tipoAnterior</h2>
                    <h2 class="Observacion">Observacion</h2>
                </section>
            }
            <aside class="contenPregunta">
                <h3 class="pregunta">
                    <div>@item.IdMaqPreNavigation.IdPreguntaNavigation.Pdescri</div>
                    <RadzenSelectBar  @bind-Value=item.Iddata TValue="bool" class="selecttt">
                        <Items>
                            <RadzenSelectBarItem Text="Bien" Value="true" />
                            <RadzenSelectBarItem Text="Defecutoso" Value="false" />
                        </Items>
                    </RadzenSelectBar>
                </h3>
                <h3 class="textObsevacion"><RadzenTextArea @bind-Value=item.Idobserv  class="w-100" Cols="30" Rows="2" /></h3>
            </aside>
    }
    <section id="secCarga">
        <RadzenButton Click=@Registrar Text="Registrar" ButtonStyle="ButtonStyle.Success" />
    </section>
}

@code{
    [Parameter]
    public int idMaquina { get; set; }
    public List<ImaqPre>? listPreguntas { get; set; } = null;
    public List<InspecDatum>? listaDataInspeccion { get; set; } = null;
    public Models.Inspeccion nuevaInspeccion { get; set; } = new Models.Inspeccion();
    public string? tipoAnterior { get; set;} = "";
    public void cambioTipo(string tipo) => this.tipoAnterior = tipo;
    public int turno  { get; set;} 
    public bool band {get; set;}
    public List<string> listaTurno = new List<string>{"1","2"};
    public List<string> listaGrupo = new List<string>{"A","B","C","D","N"};

    protected override async Task OnInitializedAsync()
    {
        nuevaInspeccion = new Models.Inspeccion();
        nuevaInspeccion.Igrupo = "A";
        nuevaInspeccion.Iturno = "1";

    }
    
    protected override async Task OnParametersSetAsync()
    {
        try{
            listPreguntas = await DataPregunta.ObtenerLasPreguntasPorMquina(idMaquina);
            tipoAnterior = "";
            listaDataInspeccion = new List<InspecDatum>(listPreguntas.Count);
            for(int i = 0; i < listPreguntas.Count;i++){
                listaDataInspeccion.Add(new InspecDatum());
                listaDataInspeccion[i].IdMaqPreNavigation =  listPreguntas[i];
            }
        }catch{
            Notificacion("error","Error","Recargue la pagina");
        }
    }

    protected async Task Registrar(){
        try{
            nuevaInspeccion.Ifecha = DateTime.Now;  
            band = await DataInspeccion.InsertarInspeccion(nuevaInspeccion,listaDataInspeccion);
            if(band){
                Notificacion("exito","","Cargado con exito");
                nuevaInspeccion = new Models.Inspeccion();

                listPreguntas = await DataPregunta.ObtenerLasPreguntasPorMquina(idMaquina);
                tipoAnterior = "";
                listaDataInspeccion = new List<InspecDatum>(listPreguntas.Count);
                for(int i = 0; i < listPreguntas.Count;i++){
                    listaDataInspeccion.Add(new InspecDatum());
                    listaDataInspeccion[i].IdMaqPreNavigation =  listPreguntas[i];
                }
            }else{
                Notificacion("error","","Hubo un error de inserccion por favor intente mas tarde");
            }
        }catch{
            Notificacion("error","Error","Recargue la pagina");
        }
    }
    public void Notificacion(string tipo,string mensaje,string detalle)
    {

        NotificationMessage notificacion = new NotificationMessage{};
        if(tipo == "error"){
            notificacion = new NotificationMessage {Severity = NotificationSeverity.Error, Summary = mensaje, Detail = detalle, Duration = 8000 };
        }else if(tipo == "info"){
            notificacion = new NotificationMessage {Severity = NotificationSeverity.Info, Summary = mensaje, Detail = detalle, Duration = 8000 };
        }else if(tipo == "exito"){
            notificacion = new NotificationMessage {Severity = NotificationSeverity.Success, Summary = mensaje, Detail = detalle, Duration = 8000 };
        }else if(tipo == "advertencia"){
            notificacion = new NotificationMessage { Severity = NotificationSeverity.Warning, Summary = mensaje, Detail = detalle, Duration = 8000 };
        }
        NotificationService.Notify(notificacion);
    } 
}